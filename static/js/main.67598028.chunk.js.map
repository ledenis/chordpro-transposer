{"version":3,"sources":["chordPro.ts","App.tsx","sample.ts","reportWebVitals.js","index.js"],"names":["transposeChordpro","chordpro","increment","preferFlat","replace","_match","chordNote","chordQuality","transposedNote","transpose","note","sharpNotes","flatNotes","noteIndex","indexOf","Error","transposedIndex","length","App","useState","setChordpro","setPreferFlat","handleTranspose","transposed","onClick","type","checked","onChange","event","handlePreferFlatChange","target","value","style","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAAO,SAASA,EACdC,EACAC,EACAC,GAUA,OAR8BF,EAASG,QACrC,mCACA,SAACC,EAAQC,EAAWC,GAClB,IAAMC,EAAiBC,EAAUH,EAAWJ,EAAWC,GACvD,MAAM,IAAN,OAAWK,GAAX,OAA4BD,EAA5B,QAIyBH,QAC3B,2BACA,SAACC,EAAQC,EAAWC,GAClB,IAAMC,EAAiBC,EAAUH,EAAWJ,EAAWC,GACvD,MAAM,QAAN,OAAeK,GAAf,OAAgCD,EAAhC,QAKN,SAASE,EAAUC,EAAcR,EAAmBC,GAClD,IAAMQ,EAAa,CACjB,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,MAEIC,EAAY,CAChB,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,MAGEC,EAAYF,EAAWG,QAAQJ,GAInC,IAHmB,IAAfG,IACFA,EAAYD,EAAUE,QAAQJ,KAEb,IAAfG,EACF,MAAM,IAAIE,MAAJ,6CAAgDL,EAAhD,MAGR,IAAMM,GACHH,EAAYX,EAAYU,EAAUK,QAAUL,EAAUK,OACzD,OAAOd,EAAaS,EAAUI,GAAmBL,EAAWK,G,WChB/CE,MA1Cf,WAAgB,IAAD,EACmBC,mBCLpB,ibDIC,mBACNlB,EADM,KACImB,EADJ,OAEuBD,oBAAS,GAFhC,mBAENhB,EAFM,KAEMkB,EAFN,KAIb,SAASC,EAAgBpB,GACvB,IAAMqB,EAAavB,EAAkBC,EAAUC,EAAWC,GAC1DiB,EAAYG,GAUd,OACE,gCACE,gCACE,wBAAQC,QAAS,kBAAMF,EAAgB,IAAvC,oBACA,wBAAQE,QAAS,kBAAMF,GAAiB,IAAxC,mBACA,kCACE,uBACEG,KAAK,WACLC,QAASvB,EACTwB,SAAU,SAACC,GAAD,OAhBpB,SAAgCzB,GAC9BkB,EAAclB,GAEd,IAAMoB,EAAavB,EAAkBC,EAAU,EAAGE,GAClDiB,EAAYG,GAYiBM,CAAuBD,EAAME,OAAOJ,YAJ7D,4BASF,0BACEK,MAAO9B,EACP0B,SAAU,SAACC,GAAD,OAAWR,EAAYQ,EAAME,OAAOC,QAC9CC,MAAO,CACLC,MAAO,QACPC,OAAQ,eE3BHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.67598028.chunk.js","sourcesContent":["export function transposeChordpro(\n  chordpro: string,\n  increment: number,\n  preferFlat: boolean\n) {\n  const bracketChordsReplaced = chordpro.replace(\n    /\\[([A-G][#b]?)([A-Za-z0-9]*)\\]/g,\n    (_match, chordNote, chordQuality) => {\n      const transposedNote = transpose(chordNote, increment, preferFlat);\n      return `[${transposedNote}${chordQuality}]`;\n    }\n  );\n\n  return bracketChordsReplaced.replace(\n    /{key:([A-G][#b]?)(m?)}/g,\n    (_match, chordNote, chordQuality) => {\n      const transposedNote = transpose(chordNote, increment, preferFlat);\n      return `{key:${transposedNote}${chordQuality}}`;\n    }\n  );\n}\n\nfunction transpose(note: string, increment: number, preferFlat: boolean) {\n  const sharpNotes = [\n    'A',\n    'A#',\n    'B',\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n  ];\n  const flatNotes = [\n    'A',\n    'Bb',\n    'B',\n    'C',\n    'Db',\n    'D',\n    'Eb',\n    'E',\n    'F',\n    'Gb',\n    'G',\n    'Ab',\n  ];\n\n  let noteIndex = sharpNotes.indexOf(note);\n  if (noteIndex === -1) {\n    noteIndex = flatNotes.indexOf(note);\n  }\n  if (noteIndex === -1) {\n    throw new Error(`Could not transpose invalid note: \"${note}\"`);\n  }\n\n  const transposedIndex =\n    (noteIndex + increment + flatNotes.length) % flatNotes.length;\n  return preferFlat ? flatNotes[transposedIndex] : sharpNotes[transposedIndex];\n}\n","import { useState } from 'react';\nimport sample from './sample';\nimport { transposeChordpro } from './chordPro';\n\nfunction App() {\n  const [chordpro, setChordpro] = useState(sample);\n  const [preferFlat, setPreferFlat] = useState(false);\n\n  function handleTranspose(increment: number) {\n    const transposed = transposeChordpro(chordpro, increment, preferFlat);\n    setChordpro(transposed);\n  }\n\n  function handlePreferFlatChange(preferFlat: boolean) {\n    setPreferFlat(preferFlat);\n\n    const transposed = transposeChordpro(chordpro, 0, preferFlat);\n    setChordpro(transposed);\n  }\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => handleTranspose(1)}>Higher</button>\n        <button onClick={() => handleTranspose(-1)}>Lower</button>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={preferFlat}\n            onChange={(event) => handlePreferFlatChange(event.target.checked)}\n          />\n          Prefer flats ♭\n        </label>\n      </div>\n      <textarea\n        value={chordpro}\n        onChange={(event) => setChordpro(event.target.value)}\n        style={{\n          width: '800px',\n          height: '600px',\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const chordpro = `{title: Swing Low Sweet Chariot}\n\n{start_of_chorus}\nSwing [D]low, sweet [G]chari[D]ot,\nComin’ for to carry me [A7]home.\nSwing [D7]low, sweet [G]chari[D]ot,\nComin’ for to [A7]carry me [D]home.\n{end_of_chorus}\n\nI [D]looked over Jordan, and [G]what did I [D]see,\nComin’ for to carry me [A7]home.\nA [D]band of angels [G]comin’ after [D]me,\nComin’ for to [A7]carry me [D]home.\n\n{comment: Chorus}`;\n\nexport default chordpro;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}